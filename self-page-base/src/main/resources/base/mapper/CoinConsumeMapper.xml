<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hh.projectxx.base.db.mapper.CoinConsumeMapper">
  <resultMap id="BaseResultMap" type="com.hh.projectxx.base.db.entity.CoinConsume">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="bill_id" jdbcType="INTEGER" property="billId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="resource_id" jdbcType="INTEGER" property="resourceId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, bill_id, create_time, type, resource_id, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_consume
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByParams" parameterType="com.hh.projectxx.base.db.entity.CoinConsume" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_consume
    where status=0
     <if test="userId != null" >
        and user_id = #{userId}
      </if>
      <if test="type != null" >
        and type = #{type}
      </if>
      <if test="resourceId != null" >
        and resource_id = #{resourceId}
      </if>
      <if test="billId != null" >
        and bill_id = #{billId}
      </if>
    order by id desc limit 10
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coin_consume
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hh.projectxx.base.db.entity.CoinConsume">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into coin_consume (user_id, bill_id, create_time, 
      type, resource_id, status
      )
    values (#{userId,jdbcType=INTEGER}, #{billId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hh.projectxx.base.db.entity.CoinConsume">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into coin_consume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="billId != null">
        bill_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="billId != null">
        #{billId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hh.projectxx.base.db.entity.CoinConsume">
    update coin_consume
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="billId != null">
        bill_id = #{billId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hh.projectxx.base.db.entity.CoinConsume">
    update coin_consume
    set user_id = #{userId,jdbcType=INTEGER},
      bill_id = #{billId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      resource_id = #{resourceId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>