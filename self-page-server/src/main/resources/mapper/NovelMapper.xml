<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hh.projectxx.server.db.mapper.NovelMapper" >
  <resultMap id="BaseResultMap" type="com.hh.projectxx.base.db.entity.Novel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="website_time" property="websiteTime" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="identify_id" property="identifyId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, source, website_time, identify_id, create_time, modify_time, status, type, title
  </sql>
  <sql id="Column_List_With_Blob" >
    id, source, website_time, identify_id, create_time, modify_time, status, type, title, content
  </sql>
  <select id="selectByPrimaryKeyWithBlob" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  	select
    <include refid="Column_List_With_Blob" />
  	from novel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from novel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectTopId" resultType="java.lang.Integer">
    select
    id
    from novel
    order by id desc limit 1
  </select>
  <select id="selectByOffsetAndCount" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List"/>
    from novel
    <where>
      <if test="startId != null">
        and id &lt; #{startId}
      </if>
      <if test="endId != null">
        and id &gt; #{endId}
      </if>
    </where>
    order by id desc
  </select>

</mapper>